private String[] downRightCorner = { "◼ ◼ ◼ ◼ ◼ ◼", "◼ ◼ ◼ ◼ ◼ ◼", "◼ ◼        ", "◼ ◼        ", "◼ ◼     ◼ ◼",
			"◼ ◼     ◼ ◼" };

	private String[] leftDownRight = { "◼ ◼ ◼ ◼ ◼ ◼", "◼ ◼ ◼ ◼ ◼ ◼", "           ", "           ", "◼ ◼     ◼ ◼",
			"◼ ◼     ◼ ◼" };

	private String[] downLeftCorner = { "◼ ◼ ◼ ◼ ◼ ◼", "◼ ◼ ◼ ◼ ◼ ◼", "        ◼ ◼", "        ◼ ◼", "◼ ◼     ◼ ◼",
			"◼ ◼     ◼ ◼" };

	private String[] upDown = { "◼ ◼     ◼ ◼", "◼ ◼     ◼ ◼", "◼ ◼     ◼ ◼", "◼ ◼     ◼ ◼", "◼ ◼     ◼ ◼",
			"◼ ◼     ◼ ◼" };

	private String[] leftRight = { "◼ ◼ ◼ ◼ ◼ ◼", "◼ ◼ ◼ ◼ ◼ ◼", "           ", "           ", "◼ ◼ ◼ ◼ ◼ ◼",
			"◼ ◼ ◼ ◼ ◼ ◼" };

	private String[] upDownRight = { "◼ ◼     ◼ ◼", "◼ ◼     ◼ ◼", "◼ ◼        ", "◼ ◼        ", "◼ ◼     ◼ ◼",
			"◼ ◼     ◼ ◼" };

	private String[] upDownLeft = { "◼ ◼     ◼ ◼", "◼ ◼     ◼ ◼", "        ◼ ◼", "        ◼ ◼", "◼ ◼     ◼ ◼",
			"◼ ◼     ◼ ◼" };

	private String[] fourWay = { "◼ ◼     ◼ ◼", "◼ ◼     ◼ ◼", "           ", "           ", "◼ ◼     ◼ ◼",
			"◼ ◼     ◼ ◼" };

	private String[] upRightCorner = { "◼ ◼     ◼ ◼", "◼ ◼     ◼ ◼", "◼ ◼        ", "◼ ◼        ", "◼ ◼ ◼ ◼ ◼ ◼",
			"◼ ◼ ◼ ◼ ◼ ◼" };

	private String[] leftUpRight = { "◼ ◼     ◼ ◼", "◼ ◼     ◼ ◼", "           ", "           ", "◼ ◼ ◼ ◼ ◼ ◼",
			"◼ ◼ ◼ ◼ ◼ ◼" };

	private String[] upLeftCorner = { "◼ ◼     ◼ ◼", "◼ ◼     ◼ ◼", "        ◼ ◼", "        ◼ ◼", "◼ ◼ ◼ ◼ ◼ ◼",
			"◼ ◼ ◼ ◼ ◼ ◼" };

/*
		 * for (int i = 0; i < 6; i++) { rooms[0][1][i] = leftDownRight[i]; } for (int i
		 * = 0; i < 6; i++) { rooms[0][2][i] = downLeftCorner[i]; } for (int i = 0; i <
		 * 6; i++) { rooms[1][0][i] = upDownRight[i]; }
		 * 
		 * rooms[1][0][2] = replace(rooms[1][0][2], 10, 'c'); rooms[1][0][2] =
		 * replace(rooms[1][0][2], 8, 'c'); rooms[1][0][3] = replace(rooms[1][0][3], 10,
		 * 'c'); rooms[1][0][3] = replace(rooms[1][0][3], 8, 'c');
		 * 
		 * for (int i = 0; i < 6; i++) { rooms[1][1][i] = upDown[i]; }
		 * 
		 * rooms[1][1][2] = replace(rooms[1][1][2], 4, 'e'); rooms[1][1][2] =
		 * replace(rooms[1][1][2], 6, 'e'); rooms[1][1][3] = replace(rooms[1][1][3], 4,
		 * 'e'); rooms[1][1][3] = replace(rooms[1][1][3], 6, 'e');
		 * 
		 * for (int i = 0; i < 6; i++) { rooms[1][2][i] = upDownLeft[i]; }
		 * 
		 * rooms[1][2][2] = replace(rooms[1][2][2], 0, 'c'); rooms[1][2][2] =
		 * replace(rooms[1][2][2], 2, 'c'); rooms[1][2][3] = replace(rooms[1][2][3], 0,
		 * 'c'); rooms[1][2][3] = replace(rooms[1][2][3], 2, 'c');
		 * 
		 * for (int i = 0; i < 6; i++) { rooms[2][0][i] = upRightCorner[i]; } for (int i
		 * = 0; i < 6; i++) { rooms[2][1][i] = leftUpRight[i]; } for (int i = 0; i < 6;
		 * i++) { rooms[2][2][i] = upLeftCorner[i]; }
		 * 
		 * rooms[2][2][2] = replace(rooms[2][2][2], 4, 'v'); rooms[2][2][2] =
		 * replace(rooms[2][2][2], 6, 'v'); rooms[2][2][3] = replace(rooms[2][2][3], 4,
		 * 'v'); rooms[2][2][3] = replace(rooms[2][2][3], 6, 'v');
		 */

